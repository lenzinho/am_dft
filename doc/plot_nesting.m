clear;clc;

% define tight binding matrix elements
vsk = [1.158,-0.476,-4.085,1.045,1.038,-0.130,-0.220,-0.074,-0.533,0.055,0.112,-0.091,0.432,0.317];

% load rotation matrices in tight binding representation
sym = load_symmetries();

% define lattice centering matrix 
M = (ones(3)-eye(3))/2; iM = inv(M);

% generate k points (frac; nesting appears to be converged above (degauss,N) = 0.1,51; 0.20,21)
N = 37; Q = [0:(N-1)]/N; [x,y,z] = meshgrid(Q); N=size(x,1);
nks = numel(x); k(1:3,1:nks) = [x(:),y(:),z(:)].';

% define bands
nbands = 8;

% define nonzero
nonzero_ = @(x) x(x~=0);

% get eigenvalues and spectral function
B = zeros(nbands,nks);
for i = 1:nks; B(1:nbands,i) = sort(real(eig( get_H_numeric_frac(sym, vsk, k(1:3,i), [1:100]) ))); end

% set fermi level energy
Ef = 0;

% reshape array into tensor
reshape_ = @(M) reshape(M,[N,N,N]); v = zeros(nbands,N,N,N); 

% define gaussian function
degauss = 0.1; gauss_ = @(x) exp(-abs(x).^2)./sqrt(pi);

% compute spectral function value at fermi level
A = zeros(nks,1);
for i = 1:nks; A(i) = sum( gauss_( (B(:,i)-Ef)/degauss )/degauss ); end
A = reshape_(A); 

% define flattened sum
fsum_ = @(x) sum(x(:));
    
% define mod
m_ = @(n) mod(n-1,N)+1;

% compute nesting (second loop over BZ is vectorized with .* )
n = zeros(N,N,N);
for i = 1:N; for j = 1:N; for k = 1:N
    ip = m_(i); jp = m_(j); kp = m_(k);
    n(ip,jp,kp) = fsum_( A .* circshift(A,[i,j,k]-1) );
end; end; end
n=n/nks;

% define kpoint path (frac)
G=[0;0;0]; X1=[0;1;1]/2; X2=[2;1;1]/2; L=[1;1;1]/2; K=[6;3;3]/8;
Np = 100; ql={'G','X','K','G','L'}; qs=[G,X2,K,G]; qe=[X1,K,G,L]; nqs = size(qs,2); 

% build path (the transformation to iM and back to M fixes the distances x)
[k,x,qt] = get_path(iM*qs,iM*qe,nqs,Np); nks = numel(x); k = M*k;

% interpolate n on the path
[nk] = fftinterp(n, k);

% define figure properties
fig_ = @(h)       set(h,'color','white');
axs_ = @(h,qt,ql) set(h,'Box','on','XTick',qt,'Xticklabel',ql);

% plot band structure 
figure(1); fig_(gcf);
plot(x,real(nk),'.-'); 
axs_(gca,qt,ql); ylim([min(real(nk))*0.9 1.1]); xlim([min(x),max(x)]);
ylabel('Nesting [a.u.]'); set(gca,'YTick',[]); xlabel('Wavevector k'); 

% save
print(gcf,'-depsc',sprintf('nesting_%i_%0.2f.eps',N,degauss));

%%
function [H] = get_H_numeric_frac(sym,v,kpt,shell)
    i2pi = 2*sqrt(-1)*pi;
    H(1:8,1:8) = 0;
    if any(shell==1)
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,1)' * getV1(v(1:2)) * sym(1:5,1:5,1) * exp(i2pi*[+0.0,+0.0,+0.0]*kpt);
    end
    if any(shell==2)
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,1)' * getV2(v(3:3)) * sym(6:8,6:8,1) * exp(i2pi*[+0.0,+0.0,+0.0]*kpt);
    end
    if any(shell==3)
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,1)' * getV3(v(4:5)) * sym(6:8,6:8,1) * exp(i2pi*[-0.5,-0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,10)' * getV3(v(4:5)) * sym(6:8,6:8,10) * exp(i2pi*[-0.5,+0.5,-0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,7)' * getV3(v(4:5)) * sym(6:8,6:8,7) * exp(i2pi*[+0.5,-0.5,-0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,9)' * getV3(v(4:5)) * sym(6:8,6:8,9) * exp(i2pi*[-0.5,+0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,6)' * getV3(v(4:5)) * sym(6:8,6:8,6) * exp(i2pi*[+0.5,-0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,2)' * getV3(v(4:5)) * sym(6:8,6:8,2) * exp(i2pi*[+0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,1)' * getV3(v(4:5))' * sym(1:5,1:5,1) * exp(i2pi*[+0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,10)' * getV3(v(4:5))' * sym(1:5,1:5,10) * exp(i2pi*[+0.5,-0.5,+0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,7)' * getV3(v(4:5))' * sym(1:5,1:5,7) * exp(i2pi*[-0.5,+0.5,+0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,9)' * getV3(v(4:5))' * sym(1:5,1:5,9) * exp(i2pi*[+0.5,-0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,6)' * getV3(v(4:5))' * sym(1:5,1:5,6) * exp(i2pi*[-0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,2)' * getV3(v(4:5))' * sym(1:5,1:5,2) * exp(i2pi*[-0.5,-0.5,+0.5]*kpt);
    end
    if any(shell==4)
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,1)' * getV4(v(6:11)) * sym(1:5,1:5,1) * exp(i2pi*[+1.0,+0.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,16)' * getV4(v(6:11)) * sym(1:5,1:5,16) * exp(i2pi*[+0.0,+1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,17)' * getV4(v(6:11)) * sym(1:5,1:5,17) * exp(i2pi*[+1.0,+0.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,3)' * getV4(v(6:11)) * sym(1:5,1:5,3) * exp(i2pi*[+0.0,+1.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,14)' * getV4(v(6:11)) * sym(1:5,1:5,14) * exp(i2pi*[+0.0,+0.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,18)' * getV4(v(6:11)) * sym(1:5,1:5,18) * exp(i2pi*[+1.0,-1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,7)' * getV4(v(6:11)) * sym(1:5,1:5,7) * exp(i2pi*[-1.0,+1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,9)' * getV4(v(6:11)) * sym(1:5,1:5,9) * exp(i2pi*[+0.0,+0.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,2)' * getV4(v(6:11)) * sym(1:5,1:5,2) * exp(i2pi*[+0.0,-1.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,5)' * getV4(v(6:11)) * sym(1:5,1:5,5) * exp(i2pi*[-1.0,+0.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,8)' * getV4(v(6:11)) * sym(1:5,1:5,8) * exp(i2pi*[+0.0,-1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,4)' * getV4(v(6:11)) * sym(1:5,1:5,4) * exp(i2pi*[-1.0,+0.0,+0.0]*kpt);
    end
    if any(shell==5)
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,1)' * getV5(v(12:14)) * sym(6:8,6:8,1) * exp(i2pi*[+1.0,+0.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,16)' * getV5(v(12:14)) * sym(6:8,6:8,16) * exp(i2pi*[+0.0,+1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,17)' * getV5(v(12:14)) * sym(6:8,6:8,17) * exp(i2pi*[+1.0,+0.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,3)' * getV5(v(12:14)) * sym(6:8,6:8,3) * exp(i2pi*[+0.0,+1.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,14)' * getV5(v(12:14)) * sym(6:8,6:8,14) * exp(i2pi*[+0.0,+0.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,18)' * getV5(v(12:14)) * sym(6:8,6:8,18) * exp(i2pi*[+1.0,-1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,7)' * getV5(v(12:14)) * sym(6:8,6:8,7) * exp(i2pi*[-1.0,+1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,9)' * getV5(v(12:14)) * sym(6:8,6:8,9) * exp(i2pi*[+0.0,+0.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,2)' * getV5(v(12:14)) * sym(6:8,6:8,2) * exp(i2pi*[+0.0,-1.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,5)' * getV5(v(12:14)) * sym(6:8,6:8,5) * exp(i2pi*[-1.0,+0.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,8)' * getV5(v(12:14)) * sym(6:8,6:8,8) * exp(i2pi*[+0.0,-1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,4)' * getV5(v(12:14)) * sym(6:8,6:8,4) * exp(i2pi*[-1.0,+0.0,+0.0]*kpt);
    end
    function [a] = getV1(v)
    a = zeros(5,5);
    a(3,3) = v(1);
    a(5,5) = v(2);
    a(1,1) = +1.0000000000000000*a(3,3);
    a(2,2) = +1.0000000000000000*a(5,5);
    a(4,4) = +1.0000000000000000*a(5,5);
    a(2,1) = 0;
    a(3,1) = 0;
    a(4,1) = 0;
    a(5,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(4,2) = 0;
    a(5,2) = 0;
    a(1,3) = 0;
    a(2,3) = 0;
    a(4,3) = 0;
    a(5,3) = 0;
    a(1,4) = 0;
    a(2,4) = 0;
    a(3,4) = 0;
    a(5,4) = 0;
    a(1,5) = 0;
    a(2,5) = 0;
    a(3,5) = 0;
    a(4,5) = 0;
    end
    function [a] = getV2(v)
    a = zeros(3,3);
    a(3,3) = v(1);
    a(1,1) = +1.0000000000000000*a(3,3);
    a(2,2) = +1.0000000000000000*a(3,3);
    a(2,1) = 0;
    a(3,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(1,3) = 0;
    a(2,3) = 0;
    end
    function [a] = getV3(v)
    a = zeros(5,3);
    a(4,2) = v(1);
    a(3,3) = v(2);
    a(5,1) = +1.0000000000000000*a(4,2);
    a(1,3) = +1.7320508075688770*a(3,3);
    a(1,1) = 0;
    a(2,1) = 0;
    a(3,1) = 0;
    a(4,1) = 0;
    a(1,2) = 0;
    a(2,2) = 0;
    a(3,2) = 0;
    a(5,2) = 0;
    a(2,3) = 0;
    a(4,3) = 0;
    a(5,3) = 0;
    end
    function [a] = getV4(v)
    a = zeros(5,5);
    a(1,3) = v(1);
    a(3,3) = v(2);
    a(3,4) = v(3);
    a(4,4) = v(4);
    a(2,5) = v(5);
    a(5,5) = v(6);
    a(1,1) = -1.1547005383792519*a(1,3)+1.0000000000000000*a(3,3);
    a(3,1) = +1.0000000000000000*a(1,3);
    a(4,1) = -1.7320508075688770*a(3,4);
    a(2,2) = +1.0000000000000000*a(5,5);
    a(5,2) = +1.0000000000000000*a(2,5);
    a(4,3) = +1.0000000000000000*a(3,4);
    a(1,4) = -1.7320508075688770*a(3,4);
    a(2,1) = 0;
    a(5,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(4,2) = 0;
    a(2,3) = 0;
    a(5,3) = 0;
    a(2,4) = 0;
    a(5,4) = 0;
    a(1,5) = 0;
    a(3,5) = 0;
    a(4,5) = 0;
    end
    function [a] = getV5(v)
    a = zeros(3,3);
    a(1,1) = v(1);
    a(2,3) = v(2);
    a(3,3) = v(3);
    a(2,2) = +1.0000000000000000*a(3,3);
    a(3,2) = +1.0000000000000000*a(2,3);
    a(2,1) = 0;
    a(3,1) = 0;
    a(1,2) = 0;
    a(1,3) = 0;
    end
end

function [sym] = load_symmetries()
    sym(:,:,1)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,2)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,3)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,4)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,5)  = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,6)  = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,7)  = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,8)  = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,9)  = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,10) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,11) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,12) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,13) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,14) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,15) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,16) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,17) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,18) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,19) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,20) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,21) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,22) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,23) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,24) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,25) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,26) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,27) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,28) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,29) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,30) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,31) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,32) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,33) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,34) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,35) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,36) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,37) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,38) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,39) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,40) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,41) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,42) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,43) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,44) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,45) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,46) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,47) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,48) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
end

function [k,x,qt] = get_path(qs,qe,nqs,N)

    % define path (includes both boundaries)
    path_ = @(k,q,N) cumsum([zeros(3,1),repmat((k-q)/(N-1),1,N-1)],2)+repmat(q,1,N);
    x_    = @(k,q,N) [0, repmat(norm((k-q)/(N-1)),1,N-1) ];

    % build path
    nks = N*nqs; k = zeros(3,nks); x = zeros(1,nks);
    for i = 1:nqs
        k(1:3,[1:N]+(i-1)*N) = path_(qe(:,i),qs(:,i),N);
        x(    [1:N]+(i-1)*N) =    x_(qe(:,i),qs(:,i),N);
    end
    x = cumsum(x); 

    % set labels coordinates
    qt = x([1,N*[1:nqs]]);
    
end

function [fq] = fftinterp(f,q)
    % fourier interpolate f(k) at points q; v must be periodic over [0,1)
    %
    % generate f using like this:
    %
    % mpgrid_ = @(N) [0:(N-1)]/N;
    % [xk,yk,zk]=meshgrid(mpgrid_(n(1)),mpgrid_(n(2)),mpgrid_(n(3)));
    % k = [xk(:),yk(:),zk(:)];
    % f = cos(2*pi*xk)+cos(2*pi*yk)+cos(2*pi*zk);
    %

    % mesh dimensions
    n = size(f);

    % generate Fourier mesh
    fftmesh_ = @(N) [0:(N-1)] - floor(N/2);
    [x,y,z]=meshgrid(fftmesh_(n(1)),fftmesh_(n(2)),fftmesh_(n(3)));
    r = [x(:),y(:),z(:)].';

    % define flatten
    flatten_ = @(x) x(:);

    % apply transform
    fhat = flatten_(fftshift(fftn( f ))) / sqrt(prod(n));

    % construct inverse Fourier transform kernel
    Ki = ones(size(q,2),size(r,2));
    for i = 1:3
        Ki = Ki .* exp( sqrt(-1)*2*pi*q(i,:).'*r(i,:) )./sqrt(n(i));
    end

    % apply inverse transform
    fq = Ki * fhat;
end








