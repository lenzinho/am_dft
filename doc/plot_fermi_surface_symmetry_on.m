% Note: identifying points related by symmetry operations takes much longer
% than directly construcing and diagonalizing the Hamiltonian on the entire
% grid.
clear;clc;

% define tight binding matrix elements
vsk = [1.158,-0.476,-4.085,1.045,1.038,-0.130,-0.220,-0.074,-0.533,0.055,0.112,-0.091,0.432,0.317];

% load rotation matrices in tight binding representation
sym = load_symmetries();

% define lattice centering matrix 
M = (ones(3)-eye(3))/2; iM = inv(M); ao = 4.0712;

% load Oh point symmetry generators (cart -> frac)
R(:,:,1) = [1, 0, 0; 0, 0, 1; 0,-1, 0]; % c4: 90 deg around [1,0,0]
R(:,:,2) = [0,-1, 0; 0, 0,-1;-1, 0, 0]; % s6: 120 deg + reflection around [1,1,1]
nRs = size(R,3); for i = 1:nRs; R(:,:,i) = M*R(:,:,i)*iM; end

% generate k points (frac)
N = 21; Q = [0:(N-1)]/(N-1); [x,y,z] = meshgrid(Q,Q,Q); N=size(x,1);
nks = numel(x); k(1:3,1:nks) = [x(:),y(:),z(:)].';

% get ibz
fbz2ibz = map_fbz_to_ibz(R,nRs,k,nks); nibzs = size(fbz2ibz,1); ibz_id = fbz2ibz(:,1);

% verify; note: weights are not factors of 48, the number of group operations, interestingly.
% is this because fractional coordinates are being used?
% plot3(k(1,:),k(2,:),k(3,:),'.',k(1,ibz_id),k(2,ibz_id),k(3,ibz_id),'o')
sum(fbz2ibz~=0,2)

% define bands
nbands = 8;

% define nonzero
nonzero_ = @(x) x(x~=0);

% get eigenvalues and spectral function
B = zeros(nbands,nks);
for i = 1:nibzs
    inds = nonzero_(fbz2ibz(i,:));
    H = get_H_numeric_frac(sym, vsk, k(1:3,inds(1)), [1:100]); 
    B(1:nbands,inds) = repmat(sort(real(eig( H ))),1,length(inds));
end

% define Fermi energy
Ef = -1;

% reshape array into tensor
reshape_ = @(M) reshape(M,[N,N,N]);
v = zeros(N,N,N,nbands); for i = 1:nbands; v(:,:,:,i) = reshape_(B(i,:)); end

% plot fermi surface
figure(1); set(gcf,'color','w'); hold on;
for i = 1:nbands; isosurface(x,y,z,v(:,:,:,i),Ef); end
box on; daspect([1 1 1]); grid on; axis tight;

% make fermi surface patch transparent
h = findobj(gca,'type','patch'); set(h,'facealpha',0.1); npatches = numel(h);

% set fermi surface patch color
clist = (parula(npatches)); for i = 1:npatches; set(h(i),'edgecolor',clist(i,:)); end

% plot brillouin zone boundary
hold on;  fv = isosurface(x,y,z, ~isnan(reshape_(B(1,:))) );
p2 = patch(fv,'FaceColor','k','facealpha',0.1,'edgecolor','none'); hold off;


%%
function [H] = get_H_numeric_frac(sym,v,kpt,shell)
    i2pi = 2*sqrt(-1)*pi;
    H(1:8,1:8) = 0;
    if any(shell==1)
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,1)' * getV1(v(1:2)) * sym(1:5,1:5,1) * exp(i2pi*[+0.0,+0.0,+0.0]*kpt);
    end
    if any(shell==2)
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,1)' * getV2(v(3:3)) * sym(6:8,6:8,1) * exp(i2pi*[+0.0,+0.0,+0.0]*kpt);
    end
    if any(shell==3)
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,1)' * getV3(v(4:5)) * sym(6:8,6:8,1) * exp(i2pi*[-0.5,-0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,10)' * getV3(v(4:5)) * sym(6:8,6:8,10) * exp(i2pi*[-0.5,+0.5,-0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,7)' * getV3(v(4:5)) * sym(6:8,6:8,7) * exp(i2pi*[+0.5,-0.5,-0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,9)' * getV3(v(4:5)) * sym(6:8,6:8,9) * exp(i2pi*[-0.5,+0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,6)' * getV3(v(4:5)) * sym(6:8,6:8,6) * exp(i2pi*[+0.5,-0.5,+0.5]*kpt);
    H(1:5,6:8) = H(1:5,6:8) + sym(1:5,1:5,2)' * getV3(v(4:5)) * sym(6:8,6:8,2) * exp(i2pi*[+0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,1)' * getV3(v(4:5))' * sym(1:5,1:5,1) * exp(i2pi*[+0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,10)' * getV3(v(4:5))' * sym(1:5,1:5,10) * exp(i2pi*[+0.5,-0.5,+0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,7)' * getV3(v(4:5))' * sym(1:5,1:5,7) * exp(i2pi*[-0.5,+0.5,+0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,9)' * getV3(v(4:5))' * sym(1:5,1:5,9) * exp(i2pi*[+0.5,-0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,6)' * getV3(v(4:5))' * sym(1:5,1:5,6) * exp(i2pi*[-0.5,+0.5,-0.5]*kpt);
    H(6:8,1:5) = H(6:8,1:5) + sym(6:8,6:8,2)' * getV3(v(4:5))' * sym(1:5,1:5,2) * exp(i2pi*[-0.5,-0.5,+0.5]*kpt);
    end
    if any(shell==4)
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,1)' * getV4(v(6:11)) * sym(1:5,1:5,1) * exp(i2pi*[+1.0,+0.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,16)' * getV4(v(6:11)) * sym(1:5,1:5,16) * exp(i2pi*[+0.0,+1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,17)' * getV4(v(6:11)) * sym(1:5,1:5,17) * exp(i2pi*[+1.0,+0.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,3)' * getV4(v(6:11)) * sym(1:5,1:5,3) * exp(i2pi*[+0.0,+1.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,14)' * getV4(v(6:11)) * sym(1:5,1:5,14) * exp(i2pi*[+0.0,+0.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,18)' * getV4(v(6:11)) * sym(1:5,1:5,18) * exp(i2pi*[+1.0,-1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,7)' * getV4(v(6:11)) * sym(1:5,1:5,7) * exp(i2pi*[-1.0,+1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,9)' * getV4(v(6:11)) * sym(1:5,1:5,9) * exp(i2pi*[+0.0,+0.0,-1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,2)' * getV4(v(6:11)) * sym(1:5,1:5,2) * exp(i2pi*[+0.0,-1.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,5)' * getV4(v(6:11)) * sym(1:5,1:5,5) * exp(i2pi*[-1.0,+0.0,+1.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,8)' * getV4(v(6:11)) * sym(1:5,1:5,8) * exp(i2pi*[+0.0,-1.0,+0.0]*kpt);
    H(1:5,1:5) = H(1:5,1:5) + sym(1:5,1:5,4)' * getV4(v(6:11)) * sym(1:5,1:5,4) * exp(i2pi*[-1.0,+0.0,+0.0]*kpt);
    end
    if any(shell==5)
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,1)' * getV5(v(12:14)) * sym(6:8,6:8,1) * exp(i2pi*[+1.0,+0.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,16)' * getV5(v(12:14)) * sym(6:8,6:8,16) * exp(i2pi*[+0.0,+1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,17)' * getV5(v(12:14)) * sym(6:8,6:8,17) * exp(i2pi*[+1.0,+0.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,3)' * getV5(v(12:14)) * sym(6:8,6:8,3) * exp(i2pi*[+0.0,+1.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,14)' * getV5(v(12:14)) * sym(6:8,6:8,14) * exp(i2pi*[+0.0,+0.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,18)' * getV5(v(12:14)) * sym(6:8,6:8,18) * exp(i2pi*[+1.0,-1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,7)' * getV5(v(12:14)) * sym(6:8,6:8,7) * exp(i2pi*[-1.0,+1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,9)' * getV5(v(12:14)) * sym(6:8,6:8,9) * exp(i2pi*[+0.0,+0.0,-1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,2)' * getV5(v(12:14)) * sym(6:8,6:8,2) * exp(i2pi*[+0.0,-1.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,5)' * getV5(v(12:14)) * sym(6:8,6:8,5) * exp(i2pi*[-1.0,+0.0,+1.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,8)' * getV5(v(12:14)) * sym(6:8,6:8,8) * exp(i2pi*[+0.0,-1.0,+0.0]*kpt);
    H(6:8,6:8) = H(6:8,6:8) + sym(6:8,6:8,4)' * getV5(v(12:14)) * sym(6:8,6:8,4) * exp(i2pi*[-1.0,+0.0,+0.0]*kpt);
    end
    function [a] = getV1(v)
    a = zeros(5,5);
    a(3,3) = v(1);
    a(5,5) = v(2);
    a(1,1) = +1.0000000000000000*a(3,3);
    a(2,2) = +1.0000000000000000*a(5,5);
    a(4,4) = +1.0000000000000000*a(5,5);
    a(2,1) = 0;
    a(3,1) = 0;
    a(4,1) = 0;
    a(5,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(4,2) = 0;
    a(5,2) = 0;
    a(1,3) = 0;
    a(2,3) = 0;
    a(4,3) = 0;
    a(5,3) = 0;
    a(1,4) = 0;
    a(2,4) = 0;
    a(3,4) = 0;
    a(5,4) = 0;
    a(1,5) = 0;
    a(2,5) = 0;
    a(3,5) = 0;
    a(4,5) = 0;
    end
    function [a] = getV2(v)
    a = zeros(3,3);
    a(3,3) = v(1);
    a(1,1) = +1.0000000000000000*a(3,3);
    a(2,2) = +1.0000000000000000*a(3,3);
    a(2,1) = 0;
    a(3,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(1,3) = 0;
    a(2,3) = 0;
    end
    function [a] = getV3(v)
    a = zeros(5,3);
    a(4,2) = v(1);
    a(3,3) = v(2);
    a(5,1) = +1.0000000000000000*a(4,2);
    a(1,3) = +1.7320508075688770*a(3,3);
    a(1,1) = 0;
    a(2,1) = 0;
    a(3,1) = 0;
    a(4,1) = 0;
    a(1,2) = 0;
    a(2,2) = 0;
    a(3,2) = 0;
    a(5,2) = 0;
    a(2,3) = 0;
    a(4,3) = 0;
    a(5,3) = 0;
    end
    function [a] = getV4(v)
    a = zeros(5,5);
    a(1,3) = v(1);
    a(3,3) = v(2);
    a(3,4) = v(3);
    a(4,4) = v(4);
    a(2,5) = v(5);
    a(5,5) = v(6);
    a(1,1) = -1.1547005383792519*a(1,3)+1.0000000000000000*a(3,3);
    a(3,1) = +1.0000000000000000*a(1,3);
    a(4,1) = -1.7320508075688770*a(3,4);
    a(2,2) = +1.0000000000000000*a(5,5);
    a(5,2) = +1.0000000000000000*a(2,5);
    a(4,3) = +1.0000000000000000*a(3,4);
    a(1,4) = -1.7320508075688770*a(3,4);
    a(2,1) = 0;
    a(5,1) = 0;
    a(1,2) = 0;
    a(3,2) = 0;
    a(4,2) = 0;
    a(2,3) = 0;
    a(5,3) = 0;
    a(2,4) = 0;
    a(5,4) = 0;
    a(1,5) = 0;
    a(3,5) = 0;
    a(4,5) = 0;
    end
    function [a] = getV5(v)
    a = zeros(3,3);
    a(1,1) = v(1);
    a(2,3) = v(2);
    a(3,3) = v(3);
    a(2,2) = +1.0000000000000000*a(3,3);
    a(3,2) = +1.0000000000000000*a(2,3);
    a(2,1) = 0;
    a(3,1) = 0;
    a(1,2) = 0;
    a(1,3) = 0;
    end
end

function [sym] = load_symmetries()
    sym(:,:,1)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,2)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,3)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,4)  = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,5)  = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,6)  = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,7)  = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,8)  = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,9)  = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,10) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,11) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,12) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,13) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,14) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,15) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,16) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,17) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,18) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,19) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,20) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,21) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,22) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,23) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,24) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,25) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,26) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,27) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,28) = [ 1  , 0, 0        , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,29) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,30) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,31) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,32) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,33) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,34) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1];
    sym(:,:,35) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,36) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,37) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,38) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,39) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,40) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,41) = [-1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 1, 0, 0];
    sym(:,:,42) = [-1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,43) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0, 1, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,44) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0,-1, 0, 0];
    sym(:,:,45) = [ 1/2, 0, sqrt(3)/2, 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1];
    sym(:,:,46) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0, 1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0, 1, 0];
    sym(:,:,47) = [ 1/2, 0,-sqrt(3)/2, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0;-sqrt(3)/2, 0,-1/2, 0, 0, 0, 0, 0; 0, 0, 0,-1, 0, 0, 0, 0; 0, 1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0, 0,-1, 0, 0; 0, 0, 0, 0, 0, 0, 0, 1; 0, 0, 0, 0, 0, 0,-1, 0];
    sym(:,:,48) = [-1  , 0, 0        , 0, 0, 0, 0, 0; 0, 0, 0, 1, 0, 0, 0, 0; 0        , 0, 1  , 0, 0, 0, 0, 0; 0,-1, 0, 0, 0, 0, 0, 0; 0, 0, 0, 0,-1, 0, 0, 0; 0, 0, 0, 0, 0, 0, 0,-1; 0, 0, 0, 0, 0, 0,-1, 0; 0, 0, 0, 0, 0, 1, 0, 0];
end

function [fbz2ibz] = map_fbz_to_ibz(R,nRs,k_fbz,nks)

    % define tiny
    tiny = 1E-6;
    
    % define function "match": returns indicies of q(1:3) in k(1:3, ... ) or [] otherwise
    match_ = @(q,k,nks) find(squeeze(all(abs(repmat(q,1,nks)-k(1:3,1:nks))<tiny,1)));

    % create permutation representation
    P = zeros(nks,nRs);
    for i = 1:nRs
        q = mod(R(:,:,i)*k_fbz+tiny,1)-tiny; 
        for j = 1:nks
            P(j,i) = match_(q(:,j),k_fbz,nks);
        end
    end
 
    % define nonzero intersection and union functions
    nzr_ = @(x)   x(x~=0);
    int_ = @(x,y) integer_intersect(nzr_(x),nzr_(y));
    uni_ = @(x,y) union(nzr_(x),nzr_(y));

    % setup map from full to irreducible Brillouin zone
    f2i = zeros(nks,48);
    for i = 1:nks
        u = unique([i,P(i,:)]);
        f2i(i,1:length(u)) = u;
    end

    % combine all rows that share a common element
    go=true;
    while go
        go=false;
        for i = 1:nks
        if f2i(i,1) ~= 0
            for j = (i+1):nks
            if f2i(j,1) ~= 0
                if int_(f2i(i,:),f2i(j,:))
                    u = uni_(f2i(i,:),f2i(j,:));
                    f2i(i,1:length(u)) = u;
                    f2i(j,:) = 0; go=true;
                end
            end
            end
        end
        end
    end

    % save fbz to ibz map, ibz indices are equal to fbz_id(:,1)
    fbz2ibz = f2i(any(f2i~=0,2),:);
    
    
    function [C] = integer_intersect(A,B)
        % ~ 10x faster than the native intserect for positive integers
        Z = zeros(1, max(max(A),max(B)));
        Z(A) = 1; C = B(logical(Z(B)));
    end
end