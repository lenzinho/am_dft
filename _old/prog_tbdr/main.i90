# 1 "main.f90"
!****************************************************************************
!
!  PROGRAM: tbdr
!
!  PURPOSE: Calculate tb dispersion along specified directions.
!
!****************************************************************************
    program main
!
    use am_options
    use am_symmetry
    use am_shells
    use am_tight_binding
    use am_unit_cell
    use am_brillouin_zone
!
    implicit none
!
    type(am_class_options)      :: opts
    type(am_class_prim_pair)    :: pp   ! primitive pairs
    type(am_class_prim_cell)    :: pc   ! primitive cell
    type(am_class_tightbinding) :: tb   ! tight binding
    type(am_class_path)         :: bzp  ! bz path
!
! <LOAD OPTIONS>
    call opts%parse_command_line_tbdr() 
! <LOAD>
! load tight binding model
        call tb%load(fname='save.tb')
! load primitive pair info
        call pp%load(fname='save.pp')
! load primitive cell info
        call pc%load(fname='save.pc')
! <MAIN>
! get path
        if (opts%npaths.eq.0) then
            call bzp%get_path(path_symb=get_pathsymb(lattice_id=pc%lattice_id), ndivs=opts%ndivs, pc=pc, opts=opts)
        else
            call bzp%get_path(path_symb=opts%path_symb, ndivs=opts%ndivs, pc=pc, opts=opts)
        endif
! load reference irreducible matrix elements, 'infile.tb_vsk'
        call tb%read_irreducible_matrix_element(fname='infile.tb_vsk')
! get tb hamiltonian on irreducible monkhorst-pack k-point mesh
        call tb%get_hamiltonian(pp=pp,bz=bzp)
! diagonalize H to get dispersion
        call tb%get_dispersion()
!<SAVE>
! save path
        call bzp%save(fname='save.bzp')
! save dr
        call tb%dr%save(fname='save.dr')
! <CLEAN EXIT>
    if (opts%verbosity.ge.1) call print_title('Done!')
!
    end program







